@page "/login"
@rendermode InteractiveServer
@layout LandingLayout
@inject LoginService loginService
@inject NavigationManager NavigationManager
@inject CurrentUser CurrentUser


<h3>Đăng nhập</h3>

<EditForm Model="@loginModel" FormName="form_login" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <label>Số điện thoại</label>
    <InputText @bind-Value="loginModel.Phone" class="form-control" />
    <ValidationMessage For="@(() => loginModel.Phone)" />

    <label>Mật khẩu</label>
    <InputText type="password" @bind-Value="loginModel.Password" class="form-control" />
    <ValidationMessage For="@(() => loginModel.Password)" />

    <button type="submit" class="btn btn-primary mt-3">Đăng nhập</button>
</EditForm>

<div class="mt-3">
    <a href="/register">Chưa có tài khoản? Đăng ký ngay</a>
</div>

<Toast @ref="toastComponent" />
@code {
    private Toast toastComponent;
    private HomeTechBlazor.Model.LoginModel loginModel = new();
    private void setCurrentUser(string role, string phone, string name, string address)
    {
        CurrentUser.role = role;
        CurrentUser.phone = phone;
        CurrentUser.name = name;
        CurrentUser.address = address;
        CurrentUser.isLoggedIn = true;
    }
    private async Task OnValidSubmit()
    {
        try
        {
        var json = await loginService.LoginAsync(loginModel.Phone, loginModel.Password);
        if (json == null) { toastComponent.ShowError("Sai tài khoản hoặc mật khẩu"); return; }
        var user = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, string>>(json)!;
        setCurrentUser(user["role"], user["phone"], user["name"], user["address"]);
        NavigationManager.NavigateTo(user["role"] == "admin" ? "/home" : "/");     
         }
        
        catch (Exception e)
        {
            toastComponent.ShowError(e.Message);
        }
    }
}