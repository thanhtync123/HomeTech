@page "/login"
@rendermode InteractiveServer
@layout LandingLayout
@inject LoginService loginService
@inject NavigationManager NavigationManager
@inject CurrentUser CurrentUser

<HeadContent>
    <link href="css/login.css" rel="stylesheet" />
</HeadContent>

<style>
    body {
        overflow: hidden; /* Disable body scrolling */
        margin: 0;
        height: 100vh; /* Ensure body takes full viewport height */
    }

    html {
        height: 100%; /* Ensure html takes full height to support body */
    }
</style>

<div class="login-page">
    <div class="particles">
        @for (int i = 0; i < 30; i++)
        {
            <div class="particle" style="left: @(new Random().Next(0, 100))%; top: @(new Random().Next(0, 100))%; animation-delay: @(new Random().NextDouble() * 15)s;"></div>
        }
    </div>
    <div class="login-container">
        <div class="login-card">
            <div class="login-header">
                <h2>Đăng Nhập</h2>
                <p>Chào mừng bạn đến với TECHFIX</p>
            </div>

            <EditForm Model="@loginModel" FormName="form_login" OnValidSubmit="OnValidSubmit" class="login-form">
                <DataAnnotationsValidator />

                <div class="form-group icon-input">
                    <span class="icon"></span>
                    <InputText @bind-Value="loginModel.Phone" placeholder="Số điện thoại" class="form-control" />
                    <ValidationMessage For="@(() => loginModel.Phone)" />
                </div>

                <div class="form-group icon-input">
                    <span class="icon"></span>
                    <InputText type="password" @bind-Value="loginModel.Password" placeholder="Mật khẩu" class="form-control" />
                    <ValidationMessage For="@(() => loginModel.Password)" />
                </div>

                <button type="submit" class="btn-login">Đăng Nhập</button>
            </EditForm>

            <div class="register-link">
                <p>Chưa có tài khoản? <a href="/register">Đăng ký ngay</a></p>
            </div>
        </div>
        <div class="company-info">
            <img src="images/logo.png" alt="Techfix Logo" class="company-logo" />
            <div class="company-description">
                <h3>Về TECHFIX</h3>
                <p>TECHFIX là web trong lĩnh vực kỹ thuật & công nghệ, cung cấp các giải pháp sáng tạo và dịch vụ sửa chữa chất lượng cao. Chúng tôi cam kết mang đến trải nghiệm tốt nhất cho khách hàng.</p>
            </div>
        </div>
    </div>
</div>

<Toast @ref="toastComponent" />

@code {
    private Toast toastComponent;
    private HomeTechBlazor.Model.LoginModel loginModel = new();
    private void setCurrentUser(string role, string phone, string name, string address, string password)
    {
        CurrentUser.role = role;
        CurrentUser.phone = phone;
        CurrentUser.name = name;
        CurrentUser.address = address;
        CurrentUser.isLoggedIn = true;
        CurrentUser.password = password;
    }
    private async Task OnValidSubmit()
    {
        try
        {
            var json = await loginService.LoginAsync(loginModel.Phone, loginModel.Password);
            if (json == null) { toastComponent.ShowError("Sai tài khoản hoặc mật khẩu"); return; }
            var user = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, string>>(json)!;
            setCurrentUser(user["role"], user["phone"], user["name"], user["address"], user["dbPassword"]);
            NavigationManager.NavigateTo(user["role"] == "admin" ? "/home" : "/");
        }
        catch (Exception e)
        {
            toastComponent.ShowError(e.Message);
        }
    }
}