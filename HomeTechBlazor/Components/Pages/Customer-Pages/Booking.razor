@page "/booking"

@layout LandingLayout
@inject NavigationManager NavigationManager
@inject BookingService bookingService
@inject CurrentUser currentUser
@rendermode InteractiveServer

<div class="container my-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">Đặt lịch dịch vụ</h4>
        </div>
        <div class="card-body">
           <EditForm Model="order" OnValidSubmit="HandleValidSubmit">
              
	            <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-2">
                    <label>Mã khách hàng</label>
                    <InputNumber @bind-Value="order.IdCustomer" class="form-control" readonly />
                    <ValidationMessage For="@(() => order.IdCustomer)" />
                </div>
                <div class="mb-2">
                    <label>Tên khách hàng</label>
                    <InputText @bind-Value="order.CustomerName" class="form-control" readonly />
                    <ValidationMessage For="@(() => order.CustomerName)" />
                </div>
                <div class="mb-2">
                    <label>SĐT</label>
                    <InputText @bind-Value="order.Phone" class="form-control" readonly />
                    <ValidationMessage For="@(() => order.Phone)" />
                </div>
                <div class="mb-2">
                    <label>Địa chỉ</label>
                    <InputText @bind-Value="order.Address" class="form-control" readonly />
                    <ValidationMessage For="@(() => order.Address)" />
                </div>

                <div class="mb-2">
                    <label>Tên dịch vụ</label>
                    <InputSelect @bind-Value="order.ServiceId"  class="form-control" TValue="int">
                        <option value="0">-- Chọn dịch vụ --</option>
                        @foreach (var kv in serviceDict)
                        {
                            <option value="@kv.Key">@kv.Value.Item1:@kv.Value.Item2.ToString("N0")</option>
                        }
                        <ValidationMessage For="@(() => order.ServiceId)" />
                    </InputSelect>


                </div>
                <div class="mb-2">
                    <label>Thời gian hẹn</label>
                    <InputDate @bind-Value="order.AppointmentTime" class="form-control" />
                </div>


                <button type="submit" class="btn btn-success w-100">
                    Đặt lịch
                </button>
            </EditForm>


          
        </div>
    </div>
</div>

<Toast @ref="toastComponent" />

@code {
    private Toast toastComponent;
    private Dictionary<int, (string, int)> serviceDict = new();
    private OrderModel order = new OrderModel
    {
        Status = "pending",
       AppointmentTime = DateTime.Today,
        IdOrder = null,
      TechnicianId = null,

    };

    protected override async Task OnInitializedAsync()
    {
        serviceDict = await bookingService.getServiceSelect();
        order.IdCustomer = currentUser.id;
        order.CustomerName = currentUser.name;
        order.Address = currentUser.address;
        order.Phone = currentUser.phone;

    }

    private async Task HandleValidSubmit()

    {
        try
        {
            await bookingService.CreateBooking(order);
            toastComponent.ShowSuccess("Đã gửi yêu cầu, Kỹ thuật viên sẽ sớm liên hệ với bạn");
            await Task.Delay(2000);
            NavigationManager.NavigateTo("/");

        }catch(Exception e)
        {
            toastComponent.ShowError(e + "");
        }



    }
}
