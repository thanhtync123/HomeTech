@page "/register"
@rendermode InteractiveServer
@layout LandingLayout
@inject UserService userService
@inject NavigationManager NavigationManager

<HeadContent>
    <link href="css/register.css" rel="stylesheet" />
</HeadContent>

<div class="register-page">
    <div class="register-card">
        <div class="register-header">
            <h2>Đăng Ký Tài Khoản</h2>
            <p>Trải nghiệm dịch vụ tiện ích cùng TECHFIX</p>
        </div>

        <EditForm Model="@userModel" FormName="form_users" OnValidSubmit="SubmitTask" class="register-form">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group icon-input">
                <span class="icon">👤</span>
                <InputText @bind-Value="userModel.Name" placeholder="Tên người dùng" class="form-control" />
                <ValidationMessage For="@(() => userModel.Name)" />
            </div>

            <div class="form-group icon-input">
                <span class="icon">📱</span>
                <InputText @bind-Value="userModel.Phone" placeholder="Số điện thoại" class="form-control" />
                <ValidationMessage For="@(() => userModel.Phone)" />
            </div>

            <div class="form-group icon-input">
                <span class="icon">🔒</span>
                <InputText @bind-Value="userModel.Password" type="password" placeholder="Mật khẩu" class="form-control" />
                <ValidationMessage For="@(() => userModel.Password)" />
            </div>

            <div class="form-group icon-input">
                <span class="icon">📍</span>
                <InputTextArea @bind-Value="userModel.Address" placeholder="Địa chỉ" class="form-control" />
                <ValidationMessage For="@(() => userModel.Address)" />
            </div>

            <button type="submit" class="btn-register">🚀 Đăng Ký Ngay</button>
        </EditForm>
    </div>
</div>

<Toast @ref="toastComponent" />

@code {
    private Toast toastComponent;
    private HomeTechBlazor.Model.Users userModel = new()
        {
            Role = "customer"
        };

    private async Task SubmitTask()
    {
        try
        {
            await userService.RegisterSync(userModel);
            toastComponent.ShowSuccess("Đăng ký thành công!");
            await Task.Delay(3000);
            NavigationManager.NavigateTo("/login");
            userModel = new() { Role = "customer" };
        }
        catch (Exception e)
        {
            // if (e.Message == $"Duplicate entry '{userModel.Phone}' for key 'users.phone'")
                toastComponent.ShowError("Tài khoản đã tồn tại, vui lòng chọn tài khoản khác");
            Console.Write(e.ToString);
        }
    }
}
